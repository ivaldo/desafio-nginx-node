networks:
  desafionet:
    driver: bridge

volumes:
  mysql_data:
    driver: local
    driver_opts:
      type: none
      device: mysql
      o: bind
  node_data:
    driver: local
    driver_opts:
      type: none
      device: node
      o: bind

services:
  mysql:
    image: mysql:5.7.16
    container_name: database
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=appdb"
      - "MYSQL_USER=appuser"
      - "MYSQL_PASSWORD=apppass"
    tty: true
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - desafionet

  node:
    build: 
      context: node
      dockerfile: Dockerfile
    image: node
    container_name: node
    environment:
      - db_host=mysql
      - db_name=appdb
      - db_user=root
      - db_pass=root
    tty: true
    depends_on:
      - mysql
    entrypoint: /usr/local/bin/dockerize -wait tcp://mysql:3306 -timeout 20s
    volumes:
      - node_data:/app
    command: >
      sh -c "/usr/local/bin/npm install --quiet &&
             /usr/local/bin/node index.js"
    networks:
      - desafionet

  nginx:
    build: 
      context: nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx
    ports:
      - 8080:80
    tty: true
    depends_on:
      - node
    entrypoint: /usr/local/bin/dockerize -wait tcp://node:3000 -timeout 20s
    command: nginx -g 'daemon off;'
    restart: on-failure
    networks:
      - desafionet